import asyncio
import logging
import os
from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram.filters import Command

logging.basicConfig(level=logging.INFO)

TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (user_id -> –∏–º—è)
admins = {}

# --- –∫–æ–º–∞–Ω–¥–∞ /start ---
@dp.message(Command("start"))
async def start_handler(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø Security –°–∞—Ñ—Ä–æ–Ω–∫—Å–∞.")

# --- –∫–æ–º–∞–Ω–¥–∞ /setadm ---
@dp.message(Command("setadm"))
async def setadm_handler(message: Message):
    # –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –±–æ—Ç–∞ –º–æ–∂–µ—Ç –Ω–∞–∑–Ω–∞—á–∞—Ç—å (–ø–æ user_id)
    OWNER_ID = 123456789  # <-- –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Telegram ID
    
    if message.from_user.id != OWNER_ID:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞–∑–Ω–∞—á–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.")
        return

    # –†–∞–∑–±–∏—Ä–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã (/setadm @username)
    args = message.text.split(maxsplit=1)
    if len(args) < 2:
        await message.answer("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /setadm @username")
        return

    username = args[1].lstrip("@")
    user_id = message.from_user.id  # –∑–¥–µ—Å—å –ª—É—á—à–µ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ —é–∑–µ—Ä—É —á–µ—Ä–µ–∑ –±–∞–∑—É

    admins[username] = user_id
    await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ –±–æ—Ç–µ!")

# --- –∫–æ–º–∞–Ω–¥–∞ /admins ---
@dp.message(Command("admins"))
async def admins_handler(message: Message):
    if not admins:
        await message.answer("üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.")
    else:
        admin_list = "\n".join([f"@{u}" for u in admins.keys()])
        await message.answer(f"üìã –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\n{admin_list}")

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
